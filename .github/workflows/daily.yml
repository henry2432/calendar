 name: Daily WooCommerce Export

on:
  schedule:
    - cron: '0 23 * * *'  # UTC 23:00 (HKT 07:00 次日)
  workflow_dispatch:

jobs:
  export:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Create credentials file
        env:
          GCP_SA_JSON: ${{ secrets.GCP_SA_JSON }}
        run: echo "$GCP_SA_JSON" > /tmp/credentials.json

      - name: Debug step - Check file existence
        run: |
          echo "檢查當前目錄檔案："
          ls -la
          echo "檢查 /tmp/credentials.json 是否存在："
          ls -la /tmp/credentials.json || echo "檔案不存在"

      - name: Debug step - Print simple message
        run: echo "工作流程正常執行到此步驟"

      - name: Debug step - Check Python version and script content
        run: |
          python --version
          echo "顯示 archive_orders.py 內容："
          cat archive_orders.py
          echo "顯示 script1.py 內容："
          cat script1.py
          echo "檢查腳本是否可執行："
          python -m py_compile archive_orders.py || echo "archive_orders.py 語法錯誤"
          python -m py_compile script1.py || echo "script1.py 語法錯誤"

      - name: Debug step - Check environment variables
        run: |
          echo "CONSUMER_KEY: ${CONSUMER_KEY}"
          echo "CONSUMER_SECRET: ${CONSUMER_SECRET}"
          if [ -z "${CONSUMER_KEY}" ] || [ -z "${CONSUMER_SECRET}" ]; then
            echo "環境變數缺失，請檢查 Secrets 設置"
            exit 1
          fi

      - name: Debug step - Before running archive orders script
        run: echo "準備執行 archive_orders.py"

      - name: Run archive orders script
        env:
          CONSUMER_KEY: ${{ secrets.CONSUMER_KEY }}
          CONSUMER_SECRET: ${{ secrets.CONSUMER_SECRET }}
        run: |
          python archive_orders.py
          echo "archive_orders.py 執行完成，檢查退出碼: $?"

      - name: Add delay to avoid quota limit
        run: sleep 60  # 等待 60 秒，避免 Google Sheets API 配額超限

      - name: Debug step - Before running script1.py
        run: echo "準備執行 script1.py"

      - name: Run Woo Orders export script
        env:
          CONSUMER_KEY: ${{ secrets.CONSUMER_KEY }}
          CONSUMER_SECRET: ${{ secrets.CONSUMER_SECRET }}
        run: |
          python script1.py
          echo "script1.py 執行完成，檢查退出碼: $?"

      - name: Debug step - Verify execution
        run: |
          echo "工作流程執行結束，檢查是否有錯誤"
          if [ $? -ne 0 ]; then
            echo "執行過程中發生錯誤"
            exit 1
          fi
